plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.google.protobuf' version '0.8.14'
}

group = 'one.terenin'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	mavenLocal()
}

ext {
	set('springCloudVersion', "2022.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'com.technokratos:spring-boot-administration-panel:1.0.1-SNAPSHOT'
	//developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springframework.cloud:spring-cloud-starter'
	implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
	compileOnly('org.projectlombok:lombok')
	annotationProcessor "org.projectlombok:lombok"
	implementation "org.mapstruct:mapstruct:1.4.2.Final"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation group: 'io.github.lognet', name: 'grpc-spring-boot-starter', version: '5.1.2'
	implementation "io.jsonwebtoken:jjwt:0.9.1"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.12.0"
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.34.1'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}


sourceSets{
	src{
		main{
			java{
				/*srcDirs "/home/lino/Documents/yandex/mus-authentication-service/build/generated/source/proto/main/java"
				srcDirs "/home/lino/Documents/yandex/mus-authentication-service/build/generated/source/proto/main/grpc"*/
			}
		}
	}
}

apply plugin: 'checkstyle'
checkstyle {
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}


tasks.named('test') {
	useJUnitPlatform()
}
